{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../maquina.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction MaquinaCadastroComponent_form_0_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const f_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", f_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", f_r5.id, \" - \", f_r5.nome, \"\");\n  }\n}\n\nfunction MaquinaCadastroComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function MaquinaCadastroComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onSubmit();\n    });\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"label\", 4);\n    i0.ɵɵtext(3, \"Fabricante:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵelementStart(5, \"select\", 6);\n    i0.ɵɵtemplate(6, MaquinaCadastroComponent_form_0_option_6_Template, 2, 3, \"option\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 3);\n    i0.ɵɵelementStart(8, \"label\", 4);\n    i0.ɵɵtext(9, \"Tipo Acesso:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 5);\n    i0.ɵɵelementStart(11, \"select\", 8);\n    i0.ɵɵelementStart(12, \"option\", 9);\n    i0.ɵɵtext(13, \"Usuario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 10);\n    i0.ɵɵtext(15, \"Manutentor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"option\", 11);\n    i0.ɵɵtext(17, \"Administrador\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 3);\n    i0.ɵɵelementStart(19, \"label\", 12);\n    i0.ɵɵtext(20, \"Login:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 5);\n    i0.ɵɵelement(22, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 3);\n    i0.ɵɵelementStart(24, \"label\", 14);\n    i0.ɵɵtext(25, \"Senha:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"div\", 5);\n    i0.ɵɵelement(27, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 3);\n    i0.ɵɵelementStart(29, \"div\", 5);\n    i0.ɵɵelementStart(30, \"button\", 16);\n    i0.ɵɵtext(31, \"Salvar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fabricante_r3 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formulario);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", fabricante_r3);\n  }\n}\n\nfunction MaquinaCadastroComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"span\", 19);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class MaquinaCadastroComponent {\n  constructor(formBuilder, route, maquinaService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.maquinaService = maquinaService;\n    this.novo = false;\n    this.inscricao = this.route.params.subscribe(params => {\n      let id = params['id'];\n\n      if (id == null) {\n        this.novo = true;\n      } else {// this.maquinaService.getFuncionario(matricula).subscribe(\n        //   f => {\n        //     this.funcionario = f\n        //     if (f) {\n        //       this.povoar();\n        //     }\n        //   }\n        // );\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      matricula: [null],\n      nome: [null, [Validators.required, Validators.minLength(3)]],\n      funcao: [null, Validators.required],\n      dataAdm: [null, Validators.required]\n    });\n  }\n\n  onSubmit() {}\n\n}\n\nMaquinaCadastroComponent.ɵfac = function MaquinaCadastroComponent_Factory(t) {\n  return new (t || MaquinaCadastroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MaquinaService));\n};\n\nMaquinaCadastroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MaquinaCadastroComponent,\n  selectors: [[\"app-maquina-cadastro\"]],\n  decls: 4,\n  vars: 4,\n  consts: [[\"style\", \"padding: 10px;\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [2, \"padding\", \"10px\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\"], [\"for\", \"funcao\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-9\"], [\"id\", \"funcionario\", \"formControlName\", \"funcionario\", 1, \"form-control\", 2, \"margin\", \"5px\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"permissao\", \"formControlName\", \"permissao\", 1, \"form-control\", 2, \"margin\", \"5px\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"for\", \"loginNovo\", 1, \"col-sm-3\", \"col-form-label\"], [\"type\", \"text\", \"placeholder\", \"Digite um login\", \"formControlName\", \"login\", \"id\", \"loginNovo\", 1, \"form-control\"], [\"for\", \"senhaNova\", 1, \"col-sm-3\", \"col-form-label\"], [\"type\", \"password\", \"placeholder\", \"Digite uma senha\", \"formControlName\", \"senha\", \"id\", \"senhaNova\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"ngValue\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"]],\n  template: function MaquinaCadastroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MaquinaCadastroComponent_form_0_Template, 32, 2, \"form\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, MaquinaCadastroComponent_ng_template_2_Template, 3, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.fabricante$))(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i4.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor],\n  pipes: [i4.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtYXF1aW5hLWNhZGFzdHJvLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"sources":["/home/server/Tcc/tcc/src/app/maquina/maquina-cadastro/maquina-cadastro.component.ts","/home/server/Tcc/tcc/src/app/maquina/maquina-cadastro/maquina-cadastro.component.html"],"names":[],"mappings":"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","sourcesContent":["import { MaquinaService } from './../maquina.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Maquina } from 'src/app/model/maquina';\nimport { Fabricante } from 'src/app/model/fabricante';\nimport { Setor } from 'src/app/model/setor';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-maquina-cadastro',\n  templateUrl: './maquina-cadastro.component.html',\n  styleUrls: ['./maquina-cadastro.component.css']\n})\nexport class MaquinaCadastroComponent implements OnInit {\n\n  maquina!: Maquina;\n\n  inscricao: Subscription;\n  fabricante$!: Observable<Fabricante[]>;\n  setor$!: Observable<Setor[]>;\n  formulario!: FormGroup;\n  novo: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private maquinaService: MaquinaService\n  ) {\n    this.inscricao = this.route.params.subscribe(\n      (params: any) => {\n        let id = params['id'];\n\n        if (id == null) {\n          this.novo = true;\n        } else {\n\n          // this.maquinaService.getFuncionario(matricula).subscribe(\n          //   f => {\n\n          //     this.funcionario = f\n          //     if (f) {\n          //       this.povoar();\n          //     }\n\n          //   }\n          // );\n\n        }\n\n      }\n    );\n  }\n\n  ngOnInit(): void {\n\n\n    this.formulario = this.formBuilder.group({\n      matricula: [null],\n      nome: [null, [Validators.required, Validators.minLength(3)]],\n      funcao: [null, Validators.required],\n      dataAdm: [null, Validators.required]\n\n    });\n\n  }\n\n  onSubmit(){\n    \n  }\n\n}\n","<form [formGroup]=\"formulario\" (ngSubmit)=\"onSubmit()\"  *ngIf=\"(fabricante$ | async) as fabricante; else loading\" style=\"padding: 10px;\">\n\n    <div class=\"form-group row\">\n      <label for=\"funcao\" class=\"col-sm-3 col-form-label\">Fabricante:</label>\n      <div class=\"col-sm-9\">\n        <select style=\"margin: 5px;\" id=\"funcionario\" class=\"form-control\" formControlName=\"funcionario\">\n          <option *ngFor=\"let f of fabricante\" [ngValue]=\"f\">{{f.id}} - {{ f.nome}}</option>\n        </select>\n      </div>\n    </div>\n  \n    <div class=\"form-group row\">\n      <label for=\"funcao\" class=\"col-sm-3 col-form-label\">Tipo Acesso:</label>\n      <div class=\"col-sm-9\">\n        <select style=\"margin: 5px;\" id=\"permissao\" class=\"form-control\" formControlName=\"permissao\">\n          <option value=1>Usuario</option>\n          <option value=2>Manutentor</option>\n          <option value=3>Administrador</option>\n        </select>\n      </div>\n    </div>\n  \n    <div class=\"form-group row\">\n      <label for=\"loginNovo\" class=\"col-sm-3 col-form-label\">Login:</label>\n      <div class=\"col-sm-9\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Digite um login\" formControlName=\"login\" id=\"loginNovo\">\n      </div>\n    </div>\n  \n    <div class=\"form-group row\">\n      <label for=\"senhaNova\" class=\"col-sm-3 col-form-label\">Senha:</label>\n      <div class=\"col-sm-9\">\n        <input type=\"password\" placeholder=\"Digite uma senha\" class=\"form-control\" formControlName=\"senha\" id=\"senhaNova\">\n      </div>\n    </div>\n  \n    <div class=\"form-group row\">\n      <div class=\"col-sm-9\">\n        <button type=\"submit\" class=\"btn btn-primary\">Salvar</button>\n      </div>\n    </div>\n  </form>\n  \n  \n  <ng-template #loading>\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>\n  </ng-template>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}