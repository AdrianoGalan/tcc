{"ast":null,"code":"import { take } from 'rxjs/operators';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../funcionario.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction FuncionarioCadastroComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"label\", 13);\n    i0.ɵɵtext(2, \"Matricula:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵelement(4, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FuncionarioCadastroComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const funcao_r4 = ctx.ngfor;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(funcao_r4.funcao);\n  }\n}\n\nfunction FuncionarioCadastroComponent_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"span\", 17);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class FuncionarioCadastroComponent {\n  constructor(formBuilder, route, funcionarioService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.funcionarioService = funcionarioService;\n    this.novo = false;\n    this.inscricao = this.route.params.subscribe(params => {\n      let matricula = params['id'];\n\n      if (matricula == null) {\n        this.novo = true;\n      } else {\n        this.funcionarioService.getFuncionario(matricula).subscribe(f => {\n          this.funcionario = f;\n\n          if (f) {\n            this.povoar();\n          }\n        });\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.funcao$ = this.funcionarioService.listFuncao().pipe(take(1));\n    console.log();\n    this.formulario = this.formBuilder.group({\n      matricula: [null],\n      nome: [null, [Validators.required, Validators.minLength(3)]],\n      funcao: [null, Validators.required],\n      dataAdm: [null, Validators.required]\n    });\n  }\n\n  povoar() {\n    this.formulario = this.formBuilder.group({\n      matricula: [this.funcionario.matricula],\n      nome: [this.funcionario.pessoa.nome, [Validators.required, Validators.minLength(3)]],\n      funcao: [this.funcionario.funcao, Validators.required],\n      dataAdm: [this.funcionario.dataAdm, Validators.required]\n    });\n  }\n\n  onSubmit() {\n    this.funcionario.funcao = this.formulario.value['funcao'];\n    this.funcionario.dataAdm = this.formulario.value['dataAdm'];\n\n    if (this.novo) {} else {\n      this.funcionario.pessoa.nome = this.formulario.value['nome'];\n      this.funcionarioService.atualizaFuncionario(this.funcionario).subscribe(success => {\n        console.log('foi');\n      }, erro => {\n        console.log(erro);\n      });\n    } //   let pessoa: Pessoa = new Pessoa();\n    //   pessoa.id = 1234;\n    //   pessoa.nome = this.formulario.value['nome'];\n    //   // \n    //   if(this.novo){\n    //    // this.funcionarioService.novoFuncionario(this.funcionario);\n    //   }else{\n    //    // this.funcionarioService.atualizarFuncionario(this.funcionario);\n    //   }\n\n  }\n\n}\n\nFuncionarioCadastroComponent.ɵfac = function FuncionarioCadastroComponent_Factory(t) {\n  return new (t || FuncionarioCadastroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FuncionarioService));\n};\n\nFuncionarioCadastroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FuncionarioCadastroComponent,\n  selectors: [[\"app-funcionario-cadastro\"]],\n  decls: 26,\n  vars: 6,\n  consts: [[1, \"container\", 2, \"padding-top\", \"50px\", \"width\", \"60%\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"row md-6\", 4, \"ngIf\"], [1, \"row\", \"md-6\"], [\"for\", \"nome\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-9\"], [\"type\", \"text\", \"formControlName\", \"nome\", 1, \"form-control\", 2, \"margin\", \"5px\"], [\"type\", \"date\", \"formControlName\", \"dataAdm\", 1, \"form-control\", 2, \"margin\", \"5px\"], [\"for\", \"funcao\", 1, \"col-sm-3\", \"col-form-label\"], [\"id\", \"funcao\", \"formControlName\", \"funcao\", 1, \"form-select\", 2, \"margin\", \"5px\"], [4, \"ngfor\", \"ngforElse\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"loading\", \"\"], [\"for\", \"matricula\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-4\"], [\"id\", \"matricula\", \"type\", \"text\", \"value\", \"1234\", \"formControlName\", \"matricula\", \"readonly\", \"\", 1, \"form-control-plaintext\", 2, \"margin\", \"5px\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"]],\n  template: function FuncionarioCadastroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function FuncionarioCadastroComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"legend\");\n      i0.ɵɵtext(3, \"Cadastro do funcionario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FuncionarioCadastroComponent_div_4_Template, 5, 0, \"div\", 2);\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵelementStart(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Nome:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5);\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 3);\n      i0.ɵɵelementStart(11, \"label\", 4);\n      i0.ɵɵtext(12, \"Data Adm:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 5);\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3);\n      i0.ɵɵelementStart(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Fun\\u00E7\\u00E3o:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 5);\n      i0.ɵɵelementStart(19, \"select\", 9);\n      i0.ɵɵtemplate(20, FuncionarioCadastroComponent_option_20_Template, 2, 1, \"option\", 10);\n      i0.ɵɵpipe(21, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 11);\n      i0.ɵɵtext(23, \"Salvar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, FuncionarioCadastroComponent_ng_template_24_Template, 3, 0, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(25);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.formulario);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.novo);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngfor\", i0.ɵɵpipeBind1(21, 4, ctx.funcao$))(\"ngforElse\", _r2);\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n  pipes: [i4.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmdW5jaW9uYXJpby1jYWRhc3Ryby5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/adriano/Documentos/tcc/src/app/funcionario/funcionario-cadastro/funcionario-cadastro.component.ts","/home/adriano/Documentos/tcc/src/app/funcionario/funcionario-cadastro/funcionario-cadastro.component.html"],"names":[],"mappings":"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","sourcesContent":["import { catchError, take } from 'rxjs/operators';\nimport { Subscription, Observable } from 'rxjs';\nimport { Funcionario } from './../../model/funcionario';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FuncionarioService } from '../funcionario.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Funcao } from 'src/app/model/funcao';\n@Component({\n  selector: 'app-funcionario-cadastro',\n  templateUrl: './funcionario-cadastro.component.html',\n  styleUrls: ['./funcionario-cadastro.component.css']\n})\nexport class FuncionarioCadastroComponent implements OnInit {\n\n  funcionario!: Funcionario;\n\n  inscricao: Subscription;\n  funcao$!: Observable<Funcao[]>;\n  formulario!: FormGroup;\n  novo: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private funcionarioService: FuncionarioService\n  ) {\n    this.inscricao = this.route.params.subscribe(\n      (params: any) => {\n        let matricula = params['id'];\n\n        if (matricula == null) {\n          this.novo = true;\n        } else {\n\n          this.funcionarioService.getFuncionario(matricula).subscribe(\n            f => {\n\n              this.funcionario = f\n              if (f) {\n                this.povoar();\n              }\n\n            }\n          );\n\n        }\n\n      }\n    );\n  }\n\n\n  ngOnInit(): void {\n\n\n    this.funcao$ = this.funcionarioService.listFuncao().pipe(\n    take(1)\n    );\n\n    console.log()\n\n    this.formulario = this.formBuilder.group({\n      matricula: [null],\n      nome: [null, [Validators.required, Validators.minLength(3)]],\n      funcao: [null, Validators.required],\n      dataAdm: [null, Validators.required]\n\n    });\n\n\n\n\n  }\n\n  povoar() {\n    this.formulario = this.formBuilder.group({\n      matricula: [this.funcionario.matricula],\n      nome: [this.funcionario.pessoa.nome, [Validators.required, Validators.minLength(3)]],\n      funcao: [this.funcionario.funcao, Validators.required],\n      dataAdm: [this.funcionario.dataAdm, Validators.required]\n\n    });\n  }\n\n  onSubmit() {\n\n    this.funcionario.funcao = this.formulario.value['funcao'];\n    this.funcionario.dataAdm = this.formulario.value['dataAdm'];\n\n    if (this.novo) {\n      \n    }else{\n\n      this.funcionario.pessoa.nome = this.formulario.value['nome'];\n      this.funcionarioService.atualizaFuncionario(this.funcionario).subscribe(\n\n        success => {\n  \n          console.log('foi')\n        },\n        erro =>{\n\n          console.log(erro)\n  \n        \n  \n        }\n  \n      );\n  \n\n    }\n    //   let pessoa: Pessoa = new Pessoa();\n    //   pessoa.id = 1234;\n    //   pessoa.nome = this.formulario.value['nome'];\n\n\n\n    //   // \n\n    //   if(this.novo){\n    //    // this.funcionarioService.novoFuncionario(this.funcionario);\n    //   }else{\n    //    // this.funcionarioService.atualizarFuncionario(this.funcionario);\n    //   }\n  }\n\n}\n","<div class=\"container\" style=\" padding-top: 50px; width: 60%;\" >\n\n\n  <form [formGroup]=\"formulario\" (ngSubmit)=\"onSubmit()\" >\n\n    <legend>Cadastro do funcionario</legend>\n\n\n    <div *ngIf=\"!novo\" class=\"row md-6\">\n      <label for=\"matricula\" class=\"col-sm-3 col-form-label\">Matricula:</label>\n      <div  class=\"col-sm-4\">\n        <input style=\"margin: 5px;\" id=\"matricula\" type=\"text\" class=\"form-control-plaintext\" value=\"1234\"\n          formControlName=\"matricula\" readonly>\n      </div>\n    </div>\n\n    <div class=\"row md-6\">\n      <label for=\"nome\" class=\"col-sm-3 col-form-label\">Nome:</label>\n      <div class=\"col-sm-9\">\n        <input style=\"margin: 5px;\" type=\"text\" class=\"form-control\"  formControlName=\"nome\">\n      </div>\n    </div>\n\n    <div class=\"row md-6\">\n      <label for=\"nome\" class=\"col-sm-3 col-form-label\">Data Adm:</label>\n      <div class=\"col-sm-9\">\n        <input style=\"margin: 5px;\" type=\"date\" class=\"form-control\" formControlName=\"dataAdm\">\n      </div>\n    </div>\n\n    <div class=\"row md-6\">\n      <label for=\"funcao\" class=\"col-sm-3 col-form-label\">Função:</label>\n      <div class=\"col-sm-9\">\n        <select style=\"margin: 5px;\" id=\"funcao\" class=\"form-select\" formControlName=\"funcao\">\n          <option *ngfor=\"(funcao$ | async) as funcao; else loading\">{{ funcao.funcao }}</option>\n        </select>\n      </div>\n    </div>\n\n\n\n\n    <button type=\"submit\" class=\"btn btn-primary\">Salvar</button>\n\n  </form>\n\n</div>\n\n\n<ng-template #loading>\n  <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n  </div>\n</ng-template>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}