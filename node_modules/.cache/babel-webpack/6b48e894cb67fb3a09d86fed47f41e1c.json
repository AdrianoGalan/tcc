{"ast":null,"code":"import { empty } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { AlertModalComponent } from \"src/app/shared/alert-modal/alert-modal.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../os.service\";\nimport * as i2 from \"ngx-bootstrap/modal\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction OsAtualizarComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"form\");\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"label\", 5);\n    i0.ɵɵtext(5, \"OS\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 4);\n    i0.ɵɵelementStart(8, \"label\", 7);\n    i0.ɵɵtext(9, \"Maquina\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OsAtualizarComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"span\", 10);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class OsAtualizarComponent {\n  constructor(osService, modalService) {\n    this.osService = osService;\n    this.modalService = modalService;\n  }\n\n  ngOnInit() {\n    this.os$ = this.osService.list().pipe(catchError(error => {\n      this.handleError();\n      return empty();\n    }));\n  }\n\n  handleError() {\n    this.bsModalRef = this.modalService.show(AlertModalComponent);\n    this.bsModalRef.content.type = \"danger\";\n    this.bsModalRef.content.message = \"Erro ao carregar\";\n  }\n\n}\n\nOsAtualizarComponent.ɵfac = function OsAtualizarComponent_Factory(t) {\n  return new (t || OsAtualizarComponent)(i0.ɵɵdirectiveInject(i1.OsService), i0.ɵɵdirectiveInject(i2.BsModalService));\n};\n\nOsAtualizarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OsAtualizarComponent,\n  selectors: [[\"app-os-atualizar\"]],\n  decls: 4,\n  vars: 4,\n  consts: [[\"class\", \"container\", 4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [1, \"container\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-6\"], [\"for\", \"osNumero\"], [\"type\", \"text\", \"readonly\", \"\", \"id\", \"osNumero\", \"value\", \"{{\", \"os.id\", \"\", \"}}\", \"\", 1, \"form-control-plaintext\"], [\"for\", \"maquina\"], [\"type\", \"text\", \"readonly\", \"\", \"id\", \"maquina\", 1, \"form-control-plaintext\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"]],\n  template: function OsAtualizarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, OsAtualizarComponent_div_0_Template, 11, 0, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, OsAtualizarComponent_ng_template_2_Template, 3, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.os$))(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm],\n  pipes: [i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcy1hdHVhbGl6YXIuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["/home/adriano/Documentos/Fatec/Tcc/tcc/src/app/os/os-atualizar/os-atualizar.component.ts","/home/adriano/Documentos/Fatec/Tcc/tcc/src/app/os/os-atualizar/os-atualizar.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\nimport { empty, Observable } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { Os } from \"src/app/model/os\";\nimport { AlertModalComponent } from \"src/app/shared/alert-modal/alert-modal.component\";\nimport { OsService } from \"../os.service\";\n\n@Component({\n  selector: \"app-os-atualizar\",\n  templateUrl: \"./os-atualizar.component.html\",\n  styleUrls: [\"./os-atualizar.component.css\"],\n})\nexport class OsAtualizarComponent implements OnInit {\n  \n  \n\n  bsModalRef!: BsModalRef;\n\n  constructor(\n    private osService: OsService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.os$ = this.osService.list().pipe(\n      catchError((error) => {\n        this.handleError();\n        return empty();\n      })\n    );\n  }\n\n  handleError() {\n    this.bsModalRef = this.modalService.show(AlertModalComponent);\n    this.bsModalRef.content.type = \"danger\";\n    this.bsModalRef.content.message = \"Erro ao carregar\";\n  }\n}\n","<div class=\"container\" *ngIf=\"os$ | async as os; else loading\">\n    <form>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"osNumero\">OS</label>\n                <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"osNumero\" value={{ os.id }}>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label for=\"maquina\">Maquina</label>\n                <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"maquina\">\n            </div>\n        </div>\n    </form>\n</div>\n\n\n<ng-template #loading>\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>\n  </ng-template>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}