{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../../funcionario/funcionario.service\";\nimport * as i4 from \"src/app/maquina/maquina.service\";\nimport * as i5 from \"@angular/common\";\n\nfunction OsCadastrarComponent_form_1_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const m_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", m_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(m_r5.sigla);\n  }\n}\n\nfunction OsCadastrarComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function OsCadastrarComponent_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onSubmit();\n    });\n    i0.ɵɵelementStart(1, \"legend\");\n    i0.ɵɵtext(2, \"Gerar nova OS\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"label\", 5);\n    i0.ɵɵtext(5, \"Maquina:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵelementStart(7, \"select\", 7);\n    i0.ɵɵtemplate(8, OsCadastrarComponent_form_1_option_8_Template, 2, 2, \"option\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 4);\n    i0.ɵɵelementStart(10, \"label\", 9);\n    i0.ɵɵtext(11, \"Problema:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 6);\n    i0.ɵɵelement(13, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 4);\n    i0.ɵɵelementStart(15, \"label\", 11);\n    i0.ɵɵtext(16, \"Data Adm:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 6);\n    i0.ɵɵelement(18, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 4);\n    i0.ɵɵelementStart(20, \"label\", 13);\n    i0.ɵɵtext(21, \"Manutentor:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 14);\n    i0.ɵɵelement(23, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 16);\n    i0.ɵɵtext(25, \"Salvar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const maquina_r3 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formulario);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", maquina_r3);\n  }\n}\n\nfunction OsCadastrarComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"span\", 19);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class OsCadastrarComponent {\n  constructor(formBuilder, route, router, funcionarioService, maquinaService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.funcionarioService = funcionarioService;\n    this.maquinaService = maquinaService;\n  }\n\n  ngOnInit() {\n    this.maquina$ = this.maquinaService.list().pipe();\n    this.formulario = this.formBuilder.group({\n      probelma: [null, [Validators.required, Validators.minLength(3)]],\n      maquina: [null, Validators.required]\n    });\n  }\n\n  onSubmit() {}\n\n}\n\nOsCadastrarComponent.ɵfac = function OsCadastrarComponent_Factory(t) {\n  return new (t || OsCadastrarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FuncionarioService), i0.ɵɵdirectiveInject(i4.MaquinaService));\n};\n\nOsCadastrarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OsCadastrarComponent,\n  selectors: [[\"app-os-cadastrar\"]],\n  decls: 5,\n  vars: 4,\n  consts: [[1, \"container\", 2, \"padding-top\", \"10px\", \"width\", \"60%\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"md-6\"], [\"for\", \"maquina\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-9\"], [\"id\", \"maquina\", \"formControlName\", \"maquina\", 1, \"form-control\", 2, \"margin\", \"5px\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"problema\", 1, \"col-sm-3\", \"col-form-label\"], [\"type\", \"text\", \"placeholder\", \"Descreva o problema da\", \"formControlName\", \"problema\", 1, \"form-control\", 2, \"margin\", \"5px\"], [\"for\", \"nome\", 1, \"col-sm-3\", \"col-form-label\"], [\"type\", \"date\", \"formControlName\", \"dataAdm\", 1, \"form-control\", 2, \"margin\", \"5px\"], [\"for\", \"manutentor\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-1\"], [\"type\", \"checkbox\", \"formControlName\", \"manutentor\", 1, \"form-control\", 2, \"margin\", \"5px\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"ngValue\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"]],\n  template: function OsCadastrarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, OsCadastrarComponent_form_1_Template, 26, 2, \"form\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, OsCadastrarComponent_ng_template_3_Template, 3, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(4);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 2, ctx.maquina$))(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i5.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i5.NgForOf, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n  pipes: [i5.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcy1jYWRhc3RyYXIuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["/home/server/Tcc/tcc/src/app/os/os-cadastrar/os-cadastrar.component.ts","/home/server/Tcc/tcc/src/app/os/os-cadastrar/os-cadastrar.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { FuncionarioService } from './../../funcionario/funcionario.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Maquina } from 'src/app/model/maquina';\nimport { MaquinaService } from 'src/app/maquina/maquina.service';\n\n@Component({\n  selector: 'app-os-cadastrar',\n  templateUrl: './os-cadastrar.component.html',\n  styleUrls: ['./os-cadastrar.component.css']\n})\nexport class OsCadastrarComponent implements OnInit {\n\n\n  formulario!: FormGroup;\n  maquina$!: Observable<Maquina[]>\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private funcionarioService: FuncionarioService,\n    private maquinaService: MaquinaService\n  ) { }\n\n  ngOnInit() {\n\n    this.maquina$ = this.maquinaService.list().pipe();\n\n    this.formulario = this.formBuilder.group({\n\n      probelma: [null, [Validators.required, Validators.minLength(3)]],\n      maquina:  [null, Validators.required]\n\n    });\n\n  }\n\n  onSubmit(){\n\n  }\n\n}\n","<div class=\"container\" style=\"padding-top: 10px; width: 60%\">\n  <form\n    [formGroup]=\"formulario\"\n    (ngSubmit)=\"onSubmit()\"\n    *ngIf=\"maquina$ | async as maquina; else loading\"\n  >\n    <legend>Gerar nova OS</legend>\n\n    <div class=\"row md-6\">\n        <label for=\"maquina\" class=\"col-sm-3 col-form-label\">Maquina:</label>\n        <div class=\"col-sm-9\">\n          <select\n            style=\"margin: 5px\"\n            id=\"maquina\"\n            class=\"form-control\"\n            formControlName=\"maquina\"\n            \n          >\n            <option *ngFor=\"let m of maquina\" [ngValue]=\"m\">{{ m.sigla }}</option>\n          </select>\n        </div>\n      </div>\n\n    <div class=\"row md-6\">\n      <label for=\"problema\" class=\"col-sm-3 col-form-label\">Problema:</label>\n      <div class=\"col-sm-9\">\n        <input\n          style=\"margin: 5px\"\n          type=\"text\"\n          placeholder=\"Descreva o problema da\"\n          class=\"form-control\"\n          formControlName=\"problema\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row md-6\">\n      <label for=\"nome\" class=\"col-sm-3 col-form-label\">Data Adm:</label>\n      <div class=\"col-sm-9\">\n        <input\n          style=\"margin: 5px\"\n          type=\"date\"\n          class=\"form-control\"\n          formControlName=\"dataAdm\"\n        />\n      </div>\n    </div>\n\n    \n\n    <div class=\"row md-6\">\n      <label for=\"manutentor\" class=\"col-sm-3 col-form-label\"\n        >Manutentor:</label\n      >\n      <div class=\"col-sm-1\">\n        <input\n          style=\"margin: 5px\"\n          type=\"checkbox\"\n          class=\"form-control\"\n          formControlName=\"manutentor\"\n        />\n      </div>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\">Salvar</button>\n  </form>\n</div>\n\n<ng-template #loading>\n  <div class=\"spinner-border\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</ng-template>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}