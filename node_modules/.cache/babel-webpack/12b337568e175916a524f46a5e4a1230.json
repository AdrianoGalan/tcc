{"ast":null,"code":"import { Pessoa } from './../../model/pessoa';\nimport { Funcionario } from './../../model/funcionario';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../funcionario.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction FuncionarioCadastroComponent_form_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"label\", 14);\n    i0.ɵɵtext(2, \"Matricula:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵelement(4, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FuncionarioCadastroComponent_form_1_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const f_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", f_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(f_r6.funcao);\n  }\n}\n\nfunction FuncionarioCadastroComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function FuncionarioCadastroComponent_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onSubmit();\n    });\n    i0.ɵɵelementStart(1, \"legend\");\n    i0.ɵɵtext(2, \"Cadastro do funcionario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, FuncionarioCadastroComponent_form_1_div_3_Template, 5, 0, \"div\", 4);\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵelementStart(5, \"label\", 6);\n    i0.ɵɵtext(6, \"Nome:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 7);\n    i0.ɵɵelement(8, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 5);\n    i0.ɵɵelementStart(10, \"label\", 6);\n    i0.ɵɵtext(11, \"Data Adm:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 7);\n    i0.ɵɵelement(13, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 5);\n    i0.ɵɵelementStart(15, \"label\", 10);\n    i0.ɵɵtext(16, \"Fun\\u00E7\\u00E3o:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 7);\n    i0.ɵɵelementStart(18, \"select\", 11);\n    i0.ɵɵtemplate(19, FuncionarioCadastroComponent_form_1_option_19_Template, 2, 2, \"option\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 13);\n    i0.ɵɵtext(21, \"Salvar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const funcao_r3 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formulario);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.novo);\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngForOf\", funcao_r3);\n  }\n}\n\nfunction FuncionarioCadastroComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"span\", 19);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class FuncionarioCadastroComponent {\n  constructor(formBuilder, route, funcionarioService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.funcionarioService = funcionarioService;\n    this.novo = false;\n    this.inscricao = this.route.params.subscribe(params => {\n      let matricula = params['id'];\n\n      if (matricula == null) {\n        this.novo = true;\n      } else {\n        this.funcionarioService.getFuncionario(matricula).subscribe(f => {\n          this.funcionario = f;\n\n          if (f) {\n            this.povoar();\n          }\n        });\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.funcao$ = this.funcionarioService.listFuncao().pipe();\n    console.log(this.funcao$);\n    this.formulario = this.formBuilder.group({\n      matricula: [null],\n      nome: [null, [Validators.required, Validators.minLength(3)]],\n      funcao: [null, Validators.required],\n      dataAdm: [null, Validators.required]\n    });\n  }\n\n  povoar() {\n    this.formulario = this.formBuilder.group({\n      matricula: [this.funcionario.matricula],\n      nome: [this.funcionario.pessoa.nome, [Validators.required, Validators.minLength(3)]],\n      funcao: [this.funcionario.funcao, Validators.required],\n      dataAdm: [this.funcionario.dataAdm, Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.novo) {\n      this.funcionario = new Funcionario();\n      let pessoa = new Pessoa();\n      this.funcionario.pessoa = pessoa;\n      this.funcionario.pessoa.nome = this.formulario.value['nome'];\n      this.funcionario.funcao = this.formulario.value['funcao'];\n      this.funcionario.dataAdm = this.formulario.value['dataAdm'];\n      this.funcionario.pessoa.id = 1;\n      console.log(this.formulario.value['funcao']);\n      this.funcionarioService.atualizaFuncionario(this.funcionario).subscribe(success => {\n        console.log('foi');\n      }, erro => {\n        console.log(erro);\n      });\n    } else {\n      console.log(\"this.formulario.value['funcao']\"); // this.funcionario.pessoa.nome = this.formulario.value['nome'];\n      // this.funcionarioService.atualizaFuncionario(this.funcionario).subscribe(\n      //   success => {\n      //     console.log('foi')\n      //   },\n      //   erro =>{\n      //     console.log(erro)\n      //   }\n      // );\n    } //   let pessoa: Pessoa = new Pessoa();\n    //   pessoa.id = 1234;\n    //   pessoa.nome = this.formulario.value['nome'];\n    //   // \n    //   if(this.novo){\n    //    // this.funcionarioService.novoFuncionario(this.funcionario);\n    //   }else{\n    //    // this.funcionarioService.atualizarFuncionario(this.funcionario);\n    //   }\n\n  }\n\n}\n\nFuncionarioCadastroComponent.ɵfac = function FuncionarioCadastroComponent_Factory(t) {\n  return new (t || FuncionarioCadastroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FuncionarioService));\n};\n\nFuncionarioCadastroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FuncionarioCadastroComponent,\n  selectors: [[\"app-funcionario-cadastro\"]],\n  decls: 5,\n  vars: 4,\n  consts: [[1, \"container\", 2, \"padding-top\", \"50px\", \"width\", \"60%\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"row md-6\", 4, \"ngIf\"], [1, \"row\", \"md-6\"], [\"for\", \"nome\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-9\"], [\"type\", \"text\", \"formControlName\", \"nome\", 1, \"form-control\", 2, \"margin\", \"5px\"], [\"type\", \"date\", \"formControlName\", \"dataAdm\", 1, \"form-control\", 2, \"margin\", \"5px\"], [\"for\", \"funcao\", 1, \"col-sm-3\", \"col-form-label\"], [\"id\", \"funcao\", \"formControlName\", \"funcao\", 1, \"form-select\", 2, \"margin\", \"5px\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"for\", \"matricula\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-4\"], [\"id\", \"matricula\", \"type\", \"text\", \"value\", \"1234\", \"formControlName\", \"matricula\", \"readonly\", \"\", 1, \"form-control-plaintext\", 2, \"margin\", \"5px\"], [3, \"ngValue\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"]],\n  template: function FuncionarioCadastroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, FuncionarioCadastroComponent_form_1_Template, 22, 3, \"form\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, FuncionarioCadastroComponent_ng_template_3_Template, 3, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(4);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 2, ctx.funcao$))(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i4.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.SelectControlValueAccessor, i4.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n  pipes: [i4.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmdW5jaW9uYXJpby1jYWRhc3Ryby5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/adriano/Documentos/tcc/src/app/funcionario/funcionario-cadastro/funcionario-cadastro.component.ts","/home/adriano/Documentos/tcc/src/app/funcionario/funcionario-cadastro/funcionario-cadastro.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Pessoa } from './../../model/pessoa';\nimport { catchError, take } from 'rxjs/operators';\nimport { Subscription, Observable } from 'rxjs';\nimport { Funcionario } from './../../model/funcionario';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FuncionarioService } from '../funcionario.service';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Funcao } from 'src/app/model/funcao';\n@Component({\n  selector: 'app-funcionario-cadastro',\n  templateUrl: './funcionario-cadastro.component.html',\n  styleUrls: ['./funcionario-cadastro.component.css']\n})\nexport class FuncionarioCadastroComponent implements OnInit {\n\n  funcionario!: Funcionario;\n\n  inscricao: Subscription;\n  funcao$!: Observable<Funcao[]>;\n  formulario!: FormGroup;\n  novo: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private funcionarioService: FuncionarioService\n  ) {\n    this.inscricao = this.route.params.subscribe(\n      (params: any) => {\n        let matricula = params['id'];\n\n        if (matricula == null) {\n          this.novo = true;\n        } else {\n\n          this.funcionarioService.getFuncionario(matricula).subscribe(\n            f => {\n\n              this.funcionario = f\n              if (f) {\n                this.povoar();\n              }\n\n            }\n          );\n\n        }\n\n      }\n    );\n  }\n\n\n  ngOnInit(): void {\n\n\n    this.funcao$ = this.funcionarioService.listFuncao().pipe();\n\n    console.log(this.funcao$)\n\n    this.formulario = this.formBuilder.group({\n      matricula: [null],\n      nome: [null, [Validators.required, Validators.minLength(3)]],\n      funcao: [null, Validators.required],\n      dataAdm: [null, Validators.required]\n\n    });\n\n\n\n\n  }\n\n  povoar() {\n    this.formulario = this.formBuilder.group({\n      matricula: [this.funcionario.matricula],\n      nome: [this.funcionario.pessoa.nome, [Validators.required, Validators.minLength(3)]],\n      funcao: [this.funcionario.funcao, Validators.required],\n      dataAdm: [this.funcionario.dataAdm, Validators.required]\n\n    });\n  }\n\n  onSubmit() {\n\n\n\n    if (this.novo) {\n\n      this.funcionario = new Funcionario();\n      let pessoa = new Pessoa();\n      this.funcionario.pessoa = pessoa;\n\n      this.funcionario.pessoa.nome = this.formulario.value['nome'];\n      this.funcionario.funcao = this.formulario.value['funcao'];\n      this.funcionario.dataAdm = this.formulario.value['dataAdm'];\n\n      this.funcionario.pessoa.id = 1\n\n      console.log(this.formulario.value['funcao'])\n\n      this.funcionarioService.atualizaFuncionario(this.funcionario).subscribe(\n\n          success => {\n    \n            console.log('foi')\n          },\n          erro =>{\n  \n            console.log(erro)\n    \n          \n    \n          }\n    \n        );\n      \n    }else{\n\n      console.log(\"this.formulario.value['funcao']\")\n      // this.funcionario.pessoa.nome = this.formulario.value['nome'];\n      // this.funcionarioService.atualizaFuncionario(this.funcionario).subscribe(\n\n      //   success => {\n  \n      //     console.log('foi')\n      //   },\n      //   erro =>{\n\n      //     console.log(erro)\n  \n        \n  \n      //   }\n  \n      // );\n  \n\n    }\n    //   let pessoa: Pessoa = new Pessoa();\n    //   pessoa.id = 1234;\n    //   pessoa.nome = this.formulario.value['nome'];\n\n\n\n    //   // \n\n    //   if(this.novo){\n    //    // this.funcionarioService.novoFuncionario(this.funcionario);\n    //   }else{\n    //    // this.funcionarioService.atualizarFuncionario(this.funcionario);\n    //   }\n  }\n\n}\n","<div class=\"container\" style=\" padding-top: 50px; width: 60%;\" >\n\n\n  <form [formGroup]=\"formulario\" (ngSubmit)=\"onSubmit()\"  *ngIf=\"(funcao$ | async) as funcao; else loading\" >\n\n    <legend>Cadastro do funcionario</legend>\n\n\n    <div *ngIf=\"!novo\" class=\"row md-6\">\n      <label for=\"matricula\" class=\"col-sm-3 col-form-label\">Matricula:</label>\n      <div  class=\"col-sm-4\">\n        <input style=\"margin: 5px;\" id=\"matricula\" type=\"text\" class=\"form-control-plaintext\" value=\"1234\"\n          formControlName=\"matricula\" readonly>\n      </div>\n    </div>\n\n    <div class=\"row md-6\">\n      <label for=\"nome\" class=\"col-sm-3 col-form-label\">Nome:</label>\n      <div class=\"col-sm-9\">\n        <input style=\"margin: 5px;\" type=\"text\" class=\"form-control\"  formControlName=\"nome\">\n      </div>\n    </div>\n\n    <div class=\"row md-6\">\n      <label for=\"nome\" class=\"col-sm-3 col-form-label\">Data Adm:</label>\n      <div class=\"col-sm-9\">\n        <input style=\"margin: 5px;\" type=\"date\" class=\"form-control\" formControlName=\"dataAdm\">\n      </div>\n    </div>\n\n    <div class=\"row md-6\">\n      <label for=\"funcao\" class=\"col-sm-3 col-form-label\">Função:</label>\n      <div class=\"col-sm-9\">\n        <select style=\"margin: 5px;\" id=\"funcao\" class=\"form-select\"  formControlName=\"funcao\" >\n          <option *ngFor=\"let f of funcao\" [ngValue]=\"f\" >{{ f.funcao }}</option>\n        </select>\n      </div>\n    </div>\n\n\n\n\n    <button type=\"submit\" class=\"btn btn-primary\">Salvar</button>\n\n  </form>\n\n</div>\n\n\n<ng-template #loading>\n  <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n  </div>\n</ng-template>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}