{"ast":null,"code":"import { Os } from './../../model/os';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../../funcionario/funcionario.service\";\nimport * as i4 from \"src/app/maquina/maquina.service\";\nimport * as i5 from \"./../os.service\";\nimport * as i6 from \"@angular/common\";\n\nfunction OsCadastrarComponent_form_1_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const m_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", m_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(m_r6.sigla);\n  }\n}\n\nfunction OsCadastrarComponent_form_1_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const o_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(o_r7);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nfunction OsCadastrarComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function OsCadastrarComponent_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onSubmit();\n    });\n    i0.ɵɵelementStart(1, \"legend\");\n    i0.ɵɵtext(2, \"Gerar nova OS\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"label\", 5);\n    i0.ɵɵtext(5, \"Maquina:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵelementStart(7, \"select\", 7);\n    i0.ɵɵtemplate(8, OsCadastrarComponent_form_1_option_8_Template, 2, 2, \"option\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 9);\n    i0.ɵɵtext(10, \"Selecione a Maquina\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 4);\n    i0.ɵɵelementStart(12, \"label\", 10);\n    i0.ɵɵtext(13, \"Problema:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 6);\n    i0.ɵɵelement(15, \"textarea\", 11);\n    i0.ɵɵelementStart(16, \"div\", 9);\n    i0.ɵɵtext(17, \"Descreva o problema da maquina \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 4);\n    i0.ɵɵelementStart(19, \"label\", 12);\n    i0.ɵɵtext(20, \"Oficina:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 6);\n    i0.ɵɵelementStart(22, \"select\", 13);\n    i0.ɵɵtemplate(23, OsCadastrarComponent_form_1_option_23_Template, 2, 1, \"option\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 15);\n    i0.ɵɵtext(25, \"Salvar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const maquina_r3 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formulario);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx_r0.submitted && ctx_r0.hasError(\"maquina\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", maquina_r3);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r0.submitted && ctx_r0.hasError(\"problema\")));\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.oficina);\n  }\n}\n\nfunction OsCadastrarComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let OsCadastrarComponent = /*@__PURE__*/(() => {\n  class OsCadastrarComponent {\n    constructor(formBuilder, route, router, funcionarioService, maquinaService, osService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.funcionarioService = funcionarioService;\n      this.maquinaService = maquinaService;\n      this.osService = osService;\n      this.submitted = false;\n      this.oficina = ['Calderaria', 'Eletrica', 'Mecanica'];\n    }\n\n    ngOnInit() {\n      this.maquina$ = this.maquinaService.list().pipe();\n      this.formulario = this.formBuilder.group({\n        problema: [null, [Validators.required, Validators.minLength(3), Validators.maxLength(250)]],\n        maquina: [null, Validators.required],\n        oficina: [null, Validators.required]\n      });\n    }\n\n    onSubmit() {\n      this.submitted = true;\n\n      if (this.formulario.valid) {\n        let os = new Os();\n        os.maquina = this.formulario.value['maquina'];\n        os.problema = this.formulario.value['problema'];\n        os.oficina = this.formulario.value['oficina'];\n        this.osService.salvarOs(os).subscribe(success => {\n          this.formulario.reset();\n          this.router.navigate(['os']);\n        }, erro => {});\n      }\n    }\n\n    hasError(field) {\n      var _a;\n\n      return (_a = this.formulario.get(field)) === null || _a === void 0 ? void 0 : _a.errors;\n    }\n\n  }\n\n  OsCadastrarComponent.ɵfac = function OsCadastrarComponent_Factory(t) {\n    return new (t || OsCadastrarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FuncionarioService), i0.ɵɵdirectiveInject(i4.MaquinaService), i0.ɵɵdirectiveInject(i5.OsService));\n  };\n\n  OsCadastrarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OsCadastrarComponent,\n    selectors: [[\"app-os-cadastrar\"]],\n    decls: 5,\n    vars: 4,\n    consts: [[1, \"container\", 2, \"padding-top\", \"10px\", \"width\", \"60%\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"md-6\"], [\"for\", \"maquina\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-9\"], [\"id\", \"maquina\", \"formControlName\", \"maquina\", 1, \"form-control\", 2, \"margin\", \"5px\", 3, \"ngClass\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"invalid-feedback\"], [\"for\", \"problema\", 1, \"col-sm-3\", \"col-form-label\"], [\"type\", \"text\", \"placeholder\", \"Descreva o problema da maquina\", \"formControlName\", \"problema\", 1, \"form-control\", 2, \"margin\", \"5px\", 3, \"ngClass\"], [\"for\", \"oficia\", 1, \"col-sm-3\", \"col-form-label\"], [\"id\", \"oficina\", \"formControlName\", \"oficina\", 1, \"form-control\", 2, \"margin\", \"5px\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"ngValue\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"]],\n    template: function OsCadastrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, OsCadastrarComponent_form_1_Template, 26, 9, \"form\", 1);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, OsCadastrarComponent_ng_template_3_Template, 3, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(4);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 2, ctx.maquina$))(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i6.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i6.NgClass, i6.NgForOf, i1.DefaultValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    pipes: [i6.AsyncPipe],\n    styles: [\"\"]\n  });\n  return OsCadastrarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}