{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { empty } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { AlertModalComponent } from \"src/app/shared/alert-modal/alert-modal.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../os.service\";\nimport * as i2 from \"ngx-bootstrap/modal\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nfunction OsAtualizarComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"form\", 3);\n    i0.ɵɵelementStart(2, \"div\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5);\n    i0.ɵɵelementStart(4, \"label\", 6);\n    i0.ɵɵtext(5, \"OS:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵelementStart(8, \"label\", 9);\n    i0.ɵɵtext(9, \"Maquina:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 4);\n    i0.ɵɵelementStart(12, \"div\", 11);\n    i0.ɵɵelementStart(13, \"label\", 12);\n    i0.ɵɵtext(14, \"Problema:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"textarea\", 13);\n    i0.ɵɵelementStart(16, \"div\", 14);\n    i0.ɵɵtext(17, \"Descreva o problema da maquina \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const os_r3 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formulario);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"value\", os_r3.id);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", os_r3.maquina.sigla);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ctx_r0.submitted && ctx_r0.hasError(\"problema\")));\n  }\n}\n\nfunction OsAtualizarComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelementStart(1, \"span\", 16);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class OsAtualizarComponent {\n  constructor(osService, modalService, formBuilder, route, router) {\n    this.osService = osService;\n    this.modalService = modalService;\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.submitted = false;\n    this.inscricao = this.route.params.subscribe(params => {\n      let id = params[\"id\"];\n      this.os$ = this.osService.getOs(id).pipe(catchError(error => {\n        this.handleError();\n        this.router.navigate([\"os\"]);\n        return empty();\n      }));\n    });\n  }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      problema: [null, [Validators.required, Validators.minLength(3), Validators.maxLength(250)]],\n      maquina: [null, Validators.required],\n      oficina: [null, Validators.required]\n    });\n  }\n\n  handleError() {\n    this.bsModalRef = this.modalService.show(AlertModalComponent);\n    this.bsModalRef.content.type = \"danger\";\n    this.bsModalRef.content.message = \"Erro ao carregar\";\n  }\n\n  hasError(field) {\n    var _a;\n\n    return (_a = this.formulario.get(field)) === null || _a === void 0 ? void 0 : _a.errors;\n  }\n\n}\n\nOsAtualizarComponent.ɵfac = function OsAtualizarComponent_Factory(t) {\n  return new (t || OsAtualizarComponent)(i0.ɵɵdirectiveInject(i1.OsService), i0.ɵɵdirectiveInject(i2.BsModalService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router));\n};\n\nOsAtualizarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OsAtualizarComponent,\n  selectors: [[\"app-os-atualizar\"]],\n  decls: 4,\n  vars: 4,\n  consts: [[\"class\", \"container\", 4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [1, \"container\"], [3, \"formGroup\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-3\"], [\"for\", \"osNumero\"], [\"type\", \"text\", \"readonly\", \"\", \"id\", \"osNumero\", 1, \"form-control\", 3, \"value\"], [1, \"form-group\", \"col-md-6\"], [\"for\", \"maquina\"], [\"type\", \"text\", \"readonly\", \"\", \"formControlName\", \"maquina\", \"id\", \"maquina\", 1, \"form-control\", 3, \"value\"], [1, \"form-group\", \"col-md-9\"], [\"for\", \"problema\"], [\"type\", \"text\", \"id\", \"problema\", \"placeholder\", \"Descreva o problema da maquina\", \"formControlName\", \"problema\", 1, \"form-control\", 2, \"margin\", \"5px\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"]],\n  template: function OsAtualizarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, OsAtualizarComponent_div_0_Template, 18, 6, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, OsAtualizarComponent_ng_template_2_Template, 3, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.os$))(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i5.NgIf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i5.NgClass],\n  pipes: [i5.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcy1hdHVhbGl6YXIuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["/home/adriano/Documentos/Fatec/Tcc/tcc/src/app/os/os-atualizar/os-atualizar.component.ts","/home/adriano/Documentos/Fatec/Tcc/tcc/src/app/os/os-atualizar/os-atualizar.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\nimport { Subscription, Observable, empty } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { Os } from \"src/app/model/os\";\nimport { AlertModalComponent } from \"src/app/shared/alert-modal/alert-modal.component\";\nimport { OsService } from \"../os.service\";\n\n@Component({\n  selector: \"app-os-atualizar\",\n  templateUrl: \"./os-atualizar.component.html\",\n  styleUrls: [\"./os-atualizar.component.css\"],\n})\nexport class OsAtualizarComponent implements OnInit {\n  os$!: Observable<Os>;\n  os!: \n  inscricao: Subscription;\n  formulario!: FormGroup;\n  submitted = false;\n\n  bsModalRef!: BsModalRef;\n\n  constructor(\n    private osService: OsService,\n    private modalService: BsModalService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.inscricao = this.route.params.subscribe((params: any) => {\n      let id = params[\"id\"];\n\n      this.os$ = this.osService.getOs(id).pipe(\n        catchError((error) => {\n          this.handleError();\n          this.router.navigate([\"os\"]);\n          return empty();\n        })\n      );\n    });\n  }\n\n  ngOnInit(): void {\n\n    this.formulario = this.formBuilder.group({\n\n      problema: [null, [Validators.required, Validators.minLength(3), Validators.maxLength(250)]],\n      maquina: [null, Validators.required],\n      oficina: [null, Validators.required]\n\n    });\n\n    \n  }\n\n  handleError() {\n    this.bsModalRef = this.modalService.show(AlertModalComponent);\n    this.bsModalRef.content.type = \"danger\";\n    this.bsModalRef.content.message = \"Erro ao carregar\";\n  }\n\n  hasError(field: string) {\n    return this.formulario.get(field)?.errors;\n  }\n}\n","<div class=\"container\" *ngIf=\"os$ | async as os; else loading\">\n    <form [formGroup]=\"formulario\">\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n                <label for=\"osNumero\">OS:</label>\n                <input type=\"text\" readonly class=\"form-control\" id=\"osNumero\" value=\"{{ os.id }}\">\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label for=\"maquina\">Maquina:</label>\n                <input type=\"text\" readonly class=\"form-control\" formControlName=\"maquina\" id=\"maquina\"\n                    value=\"{{ os.maquina.sigla }}\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-9\">\n                <label for=\"problema\">Problema:</label>\n                <textarea style=\"margin: 5px\" type=\"text\" id=\"problema\" placeholder=\"Descreva o problema da maquina\"\n                    class=\"form-control\" formControlName=\"problema\"\n                    [ngClass]=\"{ 'is-invalid': submitted && hasError('problema') }\"></textarea>\n                <div class=\"invalid-feedback\">Descreva o problema da maquina </div>\n            </div>\n        </div>\n    </form>\n</div>\n\n\n<ng-template #loading>\n    <div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</ng-template>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}